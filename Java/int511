/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */

public class Solution {
    /**
     * @param head: a ListNode
     * @param v1: An integer
     * @param v2: An integer
     * @return: a new head of singly-linked list
     */
    public ListNode swapNodes(ListNode head, int v1, int v2) {
        ListNode preNode = new ListNode(0);
        preNode.next = head;
        ListNode p1 = preNode;
        ListNode n1 = head;
        Boolean found1 = false;
        ListNode p2 = preNode;
        ListNode n2 = head;
        while(n2!=null&&n1!=null){
            if(!found1){
                if(n1.val==v1||n1.val==v2){
                    p2 = p1.next;
                    n2 = n1.next;
                    found1 = true;
                }
                else{
                    p1 = p1.next;
                    n1 = n1.next;
                }
            }else{
                if(n2.val==v1||n2.val==v2){
                    p1.next = n2;
                    p2.next = n1;
                    ListNode temp = n1.next;
                    n1.next = n2.next;
                    n2.next = temp;
                    break;
                }
                else{
                    p2 = p2.next;
                    n2 = n2.next;
                }
            }
        }
        return preNode.next;
        
        // write your code here
    }
}
